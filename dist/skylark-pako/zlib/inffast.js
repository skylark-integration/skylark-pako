/**
 * skylark-pako - A skylark wrapper for pako.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define([],function(){"use strict";const i=30,e=12;return function(t,o){let n,a,d,l,s,f,c,r,u,b,w,h,m,v,k,_,x,g,p,z,j,q,y,A;const B=t.state;n=t.next_in,y=t.input,a=n+(t.avail_in-5),d=t.next_out,A=t.output,l=d-(o-t.avail_out),s=d+(t.avail_out-257),f=B.dmax,c=B.wsize,r=B.whave,u=B.wnext,b=B.window,w=B.hold,h=B.bits,m=B.lencode,v=B.distcode,k=(1<<B.lenbits)-1,_=(1<<B.distbits)-1;i:do{h<15&&(w+=y[n++]<<h,h+=8,w+=y[n++]<<h,h+=8),x=m[w&k];e:for(;;){if(w>>>=g=x>>>24,h-=g,0==(g=x>>>16&255))A[d++]=65535&x;else{if(!(16&g)){if(0==(64&g)){x=m[(65535&x)+(w&(1<<g)-1)];continue e}if(32&g){B.mode=e;break i}t.msg="invalid literal/length code",B.mode=i;break i}p=65535&x,(g&=15)&&(h<g&&(w+=y[n++]<<h,h+=8),p+=w&(1<<g)-1,w>>>=g,h-=g),h<15&&(w+=y[n++]<<h,h+=8,w+=y[n++]<<h,h+=8),x=v[w&_];t:for(;;){if(w>>>=g=x>>>24,h-=g,!(16&(g=x>>>16&255))){if(0==(64&g)){x=v[(65535&x)+(w&(1<<g)-1)];continue t}t.msg="invalid distance code",B.mode=i;break i}if(z=65535&x,h<(g&=15)&&(w+=y[n++]<<h,(h+=8)<g&&(w+=y[n++]<<h,h+=8)),(z+=w&(1<<g)-1)>f){t.msg="invalid distance too far back",B.mode=i;break i}if(w>>>=g,h-=g,z>(g=d-l)){if((g=z-g)>r&&B.sane){t.msg="invalid distance too far back",B.mode=i;break i}if(j=0,q=b,0===u){if(j+=c-g,g<p){p-=g;do{A[d++]=b[j++]}while(--g);j=d-z,q=A}}else if(u<g){if(j+=c+u-g,(g-=u)<p){p-=g;do{A[d++]=b[j++]}while(--g);if(j=0,u<p){p-=g=u;do{A[d++]=b[j++]}while(--g);j=d-z,q=A}}}else if(j+=u-g,g<p){p-=g;do{A[d++]=b[j++]}while(--g);j=d-z,q=A}for(;p>2;)A[d++]=q[j++],A[d++]=q[j++],A[d++]=q[j++],p-=3;p&&(A[d++]=q[j++],p>1&&(A[d++]=q[j++]))}else{j=d-z;do{A[d++]=A[j++],A[d++]=A[j++],A[d++]=A[j++],p-=3}while(p>2);p&&(A[d++]=A[j++],p>1&&(A[d++]=A[j++]))}break}}break}}while(n<a&&d<s);n-=p=h>>3,w&=(1<<(h-=p<<3))-1,t.next_in=n,t.next_out=d,t.avail_in=n<a?a-n+5:5-(n-a),t.avail_out=d<s?s-d+257:257-(d-s),B.hold=w,B.bits=h}});
//# sourceMappingURL=../sourcemaps/zlib/inffast.js.map
